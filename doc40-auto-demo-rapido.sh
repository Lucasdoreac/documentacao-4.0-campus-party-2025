#!/bin/bash
# Script de Demonstra√ß√£o Autom√°tica - Documenta√ß√£o 4.0 com Claude Code
# Campus Party 2025 - Lucas D√≥rea Cardoso e Aulus Diniz
# Vers√£o r√°pida para testes

# Definir cores para melhor visualiza√ß√£o
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Caminho base
BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
DEMO_PROJECT_DIR="$BASE_DIR/demo-project"

# Abrir apresenta√ß√£o HTML
open_presentation() {
    if [ "$(uname)" == "Darwin" ]; then
        # macOS
        open "$BASE_DIR/doc40-slides-atualizados.html"
    elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
        # Linux
        if command -v xdg-open > /dev/null; then
            xdg-open "$BASE_DIR/doc40-slides-atualizados.html"
        elif command -v firefox > /dev/null; then
            firefox "$BASE_DIR/doc40-slides-atualizados.html"
        elif command -v google-chrome > /dev/null; then
            google-chrome "$BASE_DIR/doc40-slides-atualizados.html"
        else
            echo "N√£o foi poss√≠vel abrir o navegador automaticamente."
            echo "Por favor, abra manualmente o arquivo: $BASE_DIR/doc40-slides-atualizados.html"
        fi
    elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ] || [ "$(expr substr $(uname -s) 1 10)" == "MINGW64_NT" ]; then
        # Windows
        start "$BASE_DIR/doc40-slides-atualizados.html"
    else
        echo "N√£o foi poss√≠vel detectar o sistema operacional."
        echo "Por favor, abra manualmente o arquivo: $BASE_DIR/doc40-slides-atualizados.html"
    fi
}

# Fun√ß√£o para mostrar t√≠tulo de se√ß√£o
mostrar_secao() {
    local titulo="$1"
    echo ""
    echo -e "${BLUE}${BOLD}## $titulo ##${NC}"
    echo -e "${BLUE}${BOLD}$(printf '=%.0s' $(seq 1 $((${#titulo} + 6))))${NC}"
    echo ""
}

# Fun√ß√£o para simular comando e resultado
simular_comando() {
    local comando="$1"
    local resultado="$2"
    
    echo -e "${YELLOW}$> ${GREEN}${comando}${NC}"
    echo -e "$resultado"
}

# Abrir a apresenta√ß√£o HTML
echo "Abrindo apresenta√ß√£o de slides..."
open_presentation

# Mostrar cabe√ßalho
clear
echo -e "${BLUE}${BOLD}"
echo "============================================================"
echo "    üöÄ DEMONSTRA√á√ÉO AUTOM√ÅTICA - DOCUMENTA√á√ÉO 4.0"
echo "    Campus Party 2025 - Lucas D√≥rea Cardoso e Aulus Diniz"
echo "============================================================"
echo -e "${NC}"
echo "Esta demonstra√ß√£o mostrar√° como funciona um sistema completo"
echo "de Documenta√ß√£o 4.0 usando Claude Code e t√©cnicas de IA."
echo ""
echo "Vers√£o r√°pida para testes - sem delays"
echo "A apresenta√ß√£o foi aberta no seu navegador"
echo ""

# Demo 1: Consulta √† documenta√ß√£o
mostrar_secao "DEMO 1: CONSULTA √Ä DOCUMENTA√á√ÉO"
echo "A busca ag√™ntica permite fazer perguntas em linguagem natural sobre o c√≥digo."
echo ""

simular_comando "claude-code query --directory $DEMO_PROJECT_DIR --query \"Como funciona a autentica√ß√£o?\"" "
üîç Explorando o reposit√≥rio...
ü§ñ RESPOSTA:
O sistema de autentica√ß√£o usa tokens JWT para autenticar usu√°rios. 
O token √© gerado no formato 'Bearer {api_key[:5]}...{api_key[-5:]}'

FONTES:
- src/api/auth.py (relev√¢ncia: 0.95)
- api_module.py (relev√¢ncia: 0.82)
"

# Demo 2: Gera√ß√£o de documenta√ß√£o
mostrar_secao "DEMO 2: GERA√á√ÉO DE DOCUMENTA√á√ÉO"
echo "Este processo analisa o c√≥digo-fonte e gera documenta√ß√£o completa e estruturada."
echo ""

simular_comando "claude-code document --directory $DEMO_PROJECT_DIR --format markdown" "
üìù Analisando o c√≥digo-fonte...
‚úÖ Documenta√ß√£o gerada com sucesso em $DEMO_PROJECT_DIR/docs/api_module.md!
"

simular_comando "head -n 10 $DEMO_PROJECT_DIR/docs/api_module.md" "
# API de Pagamentos - Documenta√ß√£o

*Gerado automaticamente em: $(date +"%Y-%m-%d %H:%M:%S")*
*Autores: Lucas D√≥rea Cardoso, Aulus Diniz*

## Vis√£o Geral

Este m√≥dulo implementa um processador de pagamentos com valida√ß√£o avan√ßada e documenta√ß√£o integrada.
"

# Demo 3: Agente de manuten√ß√£o
mostrar_secao "DEMO 3: AGENTE DE MANUTEN√á√ÉO DE DOCUMENTA√á√ÉO"
echo "Este agente monitora mudan√ßas no c√≥digo e atualiza a documenta√ß√£o automaticamente."
echo ""

simular_comando "git commit -m \"feat: Adicionar par√¢metro timeout\"" "
[main a1b2c3d] feat: Adicionar par√¢metro timeout
 1 file changed, 5 insertions(+), 1 deletion(-)
"

simular_comando "claude-code update-docs --directory $DEMO_PROJECT_DIR --commit a1b2c3d" "
üîç Analisando altera√ß√µes no commit a1b2c3d...
‚úÖ Documenta√ß√£o atualizada com sucesso!
‚úÖ Arquivos atualizados:
   - $DEMO_PROJECT_DIR/docs/api_module.md
   - $DEMO_PROJECT_DIR/docs/api/openapi.json
"

# Demo 4: Gera√ß√£o de c√≥digo com documenta√ß√£o
mostrar_secao "DEMO 4: GERA√á√ÉO DE C√ìDIGO COM DOCUMENTA√á√ÉO INTEGRADA"
echo "Este √© o auge da Documenta√ß√£o 4.0: c√≥digo e documenta√ß√£o nascem juntos!"
echo ""

simular_comando "claude-code generate --prompt \"Crie um m√≥dulo para reembolsos\"" "
üß† Pensando...
‚úÖ C√≥digo gerado com sucesso em $DEMO_PROJECT_DIR/src/api/refunds.py!
"

simular_comando "head -n 15 $DEMO_PROJECT_DIR/src/api/refunds.py" "
\"\"\"
M√≥dulo de Processamento de Reembolsos

Este m√≥dulo implementa um sistema completo para processamento de reembolsos
com valida√ß√£o e rastreamento completo.

Autores: Lucas D√≥rea Cardoso, Aulus Diniz
Data: $(date +\"%Y-%m-%d\")
\"\"\"

import datetime
import uuid
from typing import Dict, Any, Optional
\"\"\"
"

# Conclus√£o
mostrar_secao "CONCLUS√ÉO: DOCUMENTA√á√ÉO 4.0 COM CLAUDE CODE"

echo -e "${GREEN}‚úÖ Busca Ag√™ntica${NC}: Consultas em linguagem natural sobre o c√≥digo"
echo -e "${GREEN}‚úÖ Gera√ß√£o Autom√°tica${NC}: Documenta√ß√£o completa gerada a partir do c√≥digo"
echo -e "${GREEN}‚úÖ Manuten√ß√£o Autom√°tica${NC}: Atualiza√ß√£o da documenta√ß√£o ao mudar o c√≥digo"
echo -e "${GREEN}‚úÖ Gera√ß√£o de C√≥digo${NC}: C√≥digo e documenta√ß√£o nascem juntos"
echo -e "${GREEN}‚úÖ Integra√ß√£o Cont√≠nua${NC}: Tudo integrado ao fluxo de desenvolvimento"
echo ""

echo "A Documenta√ß√£o 4.0 transforma documenta√ß√£o de um fardo em um ativo estrat√©gico"
echo "que evolui automaticamente com seu c√≥digo."
echo ""

echo -e "${BLUE}Para saber mais:${NC}"
echo -e "1. Consulte o guia pr√°tico: ${YELLOW}doc40-guia-pratico.md${NC}"
echo -e "2. Veja a apresenta√ß√£o completa: ${YELLOW}doc40-slides-atualizados.html${NC}"
echo -e "3. Explore os scripts de exemplo: ${YELLOW}doc40-*.py${NC}"
echo ""

echo -e "${BLUE}${BOLD}OBRIGADO POR ASSISTIR √Ä DEMONSTRA√á√ÉO!${NC}"
echo -e "${BLUE}Campus Party 2025 - Lucas D√≥rea Cardoso e Aulus Diniz${NC}"